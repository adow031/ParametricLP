var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/#ParametricLP-Exported-Functions","page":"API Reference","title":"ParametricLP Exported Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"ParametricLP.find_regions","category":"page"},{"location":"api/#ParametricLP.find_regions","page":"API Reference","title":"ParametricLP.find_regions","text":"find_regions(\n    model::JuMP.Model,\n    parameters::Vector{VariableRef},\n    box::Tuple{Tuple{Float64,Float64},Tuple{Float64,Float64}},\n    ϵ = 0.01,\n)\n\nThis function finds all the optimal bases and their corresponding regions in terms of two `parameters` in a linear programming `model`.\n\n### Required arguments\n`model` is a `JuMP.Model` linear programme, defined in a way where two of the right-hand side values are replaced by variables.\n\n`parameters` is a vector of two variables that appear on the right-hand side of the two constraints that we wish to explore parametrically.\n\n`box` is a Tuple of Tuples, this defines the minimum and maximum value for each of the `parameters` described above.\n\n### Optional arguments\n`ϵ` is a tolerance value used when ensuring that we find an adjacent basis.\n\n\n\n\n\n","category":"function"},{"location":"","page":"ParametricLP","title":"ParametricLP","text":"CurrentModule = ParametricLP\nDocTestSetup = quote\n    using ParametricLP\nend","category":"page"},{"location":"#ParametricLP.jl","page":"ParametricLP","title":"ParametricLP.jl","text":"","category":"section"},{"location":"#Installation","page":"ParametricLP","title":"Installation","text":"","category":"section"},{"location":"","page":"ParametricLP","title":"ParametricLP","text":"] add https://github.com/adow031/ParametricLP.jl.git","category":"page"}]
}
